@page "/EditTag"
@inject IHttpClientFactory _clientFactory
@inject NavigationManager _navigationManager
@inject TagsService _tagService

<h3>EditCategory</h3>

<ul class="list-group">
    <li class="list-group-item">
        Username:
        <input @bind="category.Name" />
    </li>
    <li class="list-group-item">
        Color:
        <div style="background-color: @category.Color" class="buttonColor"></div>
        <button class="btn btn-primary" @onclick="OpenModal">
            Select a Color
        </button>
        <ColorPicker Title="My Blazor ColorPicker" IsOpened="isOpened" Closed="ClosedEvent" MyColor="@category.Color">
        </ColorPicker>
    </li>
</ul>
<button class="btn btn-primary" @onclick="() => SaveCategory()">Save</button>


@code {
    public Tag category = new Tag();

    protected override Task OnInitializedAsync()
    {
        category = _tagService.Tags.FirstOrDefault(x => x.IsSelected);
        return base.OnInitializedAsync();

    }

    private async Task SaveCategory()
    {
        await _tagService.UpdateTagAsync(category);
        _navigationManager.NavigateTo("Tags");
    }

    bool isOpened = false;

    void OpenModal()
    {
        isOpened = true;
    }

    void ClosedEvent(string value)
    {
        category.Color = value;
        isOpened = false;
    }
}
